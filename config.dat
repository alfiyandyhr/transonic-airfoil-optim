%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% Neural-Network-based Surrogate Optimization of a Transonic Airfoil           %
% Author: Alfiyandy Hariansyah                                                 %
% Institution: Institute of Fluid Science, Tohoku University                   %
% Date: 3/6/2021                                                               %
% CFD Solver: SU2                                                              %
% Mesh software: Pointwise                                                     %
% Deep Learning Framework: PyTorch                                             %
% Language: Python,C                                                           %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%-------------------------- DESIGN OF EXPERIMENT ------------------------------%
%
% Setting for population
POPULATION_SIZE = 101
%
%----------------------------- PROBLEM DEFINITION -----------------------------%
%
% Airfoil parametrization using BSpline
NUMBER_OF_ACTIVE_CONTROL_POINTS = 26
PERTURBATION = 0.02
%
% BSpline components
BSPLINE_DEGREE = 3
%
% Number of objectives
N_OBJ = 2
%
% Number of constraints
N_CONSTR = 6
%
%------------------------- MESH CONFIGURATION (POINTWISE) ---------------------%
%
% Pointwise port
PW_PORT = 2807
%
% Mesh type (OGRID_STRUCTURED, OGRID_UNSTRUCTURED, CGRID_STRUCTURED)
MESH_TYPE = CGRID_UNSTRUCTURED
%
% Dimension of the airfoil connector
AIRFOIL_DIM = 1600
%
% Dimension of the farfield connector (for unstructured)
FARFIELD_DIM = 100
%
% The distance from origin to the farfield
FARFIELD_DIST = 50
%
% Dimension of the connector between farfield and airfoil
STEP_DIM = 65
%
% Dimension of the initial step (for c grid)
FIRST_SPACING = 0.001
%
% Leading edge and trailing edge spacing
LE_SPACING = 0.001
TE_SPACING = 0.01
%
% Size Field Decay (between 0 and 1) for unstructured grid
SIZE_FIELD_DECAY = 0.99
%
% Algorithm for unstructured (DELAUNAY, ADVANCING_FRONT, ADVANCING_FRONT_ORTHO)
ALGORITHM = DELAUNAY
%
% Solver (SU2, CGNS)
SOLVER = SU2
%
% Dimension
DIMENSION = 2
%
%----------------------- NEURAL NETWORK CONFIGURATION --------------------------%
%
% Number of epoch(s)
N_EPOCH = 1000
% 
% Number of neurons in the hidden layer
N_NEURON = 100
%
% Learning rate (for zdt1,zdt2, zdt3 and osy it's 2E-5)
LEARNING_RATE = 2E-5
%
% Batch rate
BATCHRATE = 5
%
% Number of updates (initial training is not counted)
NO_OF_UPDATES = 5
%
% The ratio of training data to all data
TRAIN_RATIO = 0.8
%
%
%------------- OPTIMIZATION CONFIGURATION ON THE TRAINED NN MODEL -------------%
%
% Optimization algorithm (nsga, nsga2, nsga3)
OPTIMIZATION_ALGORITHM = nsga2
%
% Initial sampling (real_lhs, real_random, bin_lhs, bin_random)
SAMPLING_METHOD = real_lhs
%
% Selection operator (random, tournament)
SELECTION_OPERATOR = tournament
%
% Crossover operator (real_sbx, int_sbx, read_de, perm_ox, perm_erx)
CROSSOVER_OPERATOR = real_sbx
CROSSOVER_PROBABILITY = 0.9
ETA_CROSSOVER = 15
%
% Mutation operator (none, real_pm, int_pm, bin_bit-flip, perm_inv)
MUTATION_OPERATOR = real_pm
ETA_MUTATION = 20
%
% Stopping criteria (n_gen|n_iter, n_eval, igd, time, x_tol, f_tol)
TERMINATION = n_gen
NUMBER_OF_GENERATION = 250
%